@page "/movies-by-customers"
@using System.Net.Http
@using System.Net.Http.Json
@using MovieStoreFrontend.DTO
@inject HttpClient Http

<h2 style="border-bottom: groove">Películas por Clientes</h2>
   
<div class="form-group row" style="margin-top: 20px; margin-bottom: 15px">

    <div class="col-sm-3">
        <label for="department" class="col-form-label">
            <b>Estado de Películas</b>
        </label>                    
        <select name="select" class="form-control" @onchange="changeDiskStatus">
            <option value="" selected>Todos</option>
            <option value="Rentada">Rentada</option>
            <option value="Comprada">Comprada</option>
            <option value="Disponible">Disponible</option>
        </select>
    </div>

    <div class="col-sm-3">
        <label for="department" class="col-form-label">
            <b>Tipo de Documento</b>
        </label>                    
        <select name="select" class="form-control" @onchange="changeDocType">
            <option value="" selected>Todos</option>
            <option value="Boleta">Boleta</option>
            <option value="Factura">Factura</option>
        </select>
    </div>
</div>
    
<div class="form-group row">
    <div class="col-sm-12">
        <table class="table">
            <thead>
                <tr style="text-align: center; border-block: initial">
                    <th colspan="4" style="border-width:thin; border-color: black">Película</th>
                    <th colspan="3" style="border-width:thin; border-color: black">Disco</th>
                    <th colspan="3" style="border-width:thin; border-color: black">Cliente</th>
                </tr>
                <tr>
                    <th>Nombre</th>
                    <th>Categoría</th>
                    <th>P. Renta</th>
                    <th>P. Compra</th>
                    <th>Código</th>
                    <th>Tipo</th>
                    <th>Estado</th>
                    <th>N° Identidad</th>
                    <th>Nombre</th>
                    <th>Doc. Venta</th>
                </tr>
            </thead>
            <tbody>
                @if (oResponse != null && oResponse.Data != null) {
                    @foreach (var oElement in (List<MoviesByCustomerDTO>)oResponse.Data)
                    {
                        <tr @key=oElement.Id>
                            <td>@oElement.MovieName</td>
                            <td>@oElement.CategoryName</td>
                            <td>@oElement.RentalPrice</td>
                            <td>@oElement.PurchasePrice </td>
                            <td>@oElement.DiskCode</td>
                            <td>@oElement.DiskType</td>
                            <td>@oElement.DiskStatus</td>
                            <td>@oElement.CustomerCode</td>
                            <td>@oElement.CustomerName</td>
                            <td>@oElement.DocType</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    #nullable enable
    string queryString = "";
    string diskStatus = "";
    string docType= "";


    // FALTA AGREGAR LA CAPA SERVICE!!!!

    // public string Url = "https://localhost:7095/api/Movies/byCustomers";
    public string Url = "/api/Movies/byCustomers";

    public  Response<List<MoviesByCustomerDTO>> oResponse = new Response<List<MoviesByCustomerDTO>>();

    protected override async Task OnInitializedAsync() => 
        oResponse = await Http.GetFromJsonAsync<Response<List<MoviesByCustomerDTO>>>(Url);

    private async void  changeDiskStatus(ChangeEventArgs e)
    {
        diskStatus = e.Value.ToString();
        queryString = "?diskStatus=" + diskStatus + (string.IsNullOrEmpty(docType)? "": "&docType=" + docType);
        // oResponse = await Http.GetFromJsonAsync<Response<List<MoviesByCustomerDTO>>>(Url + queryString);

        oResponse = await Http.GetFromJsonAsync<Response<List<MoviesByCustomerDTO>>>(Url + queryString);

        StateHasChanged();
    }

    private async void changeDocType(ChangeEventArgs e)
    {
        docType = e.Value.ToString();
        queryString = "?docType=" + docType + (string.IsNullOrEmpty(diskStatus)? "": "&diskStatus=" + diskStatus);
        oResponse = await Http.GetFromJsonAsync<Response<List<MoviesByCustomerDTO>>>(Url + queryString);
        StateHasChanged();
    }
}
